// Carrybits  Assignment-8 CS20B{007,008,047}

/* 
   Code below is Carrybits.
   Generates c4,c8,c12,c16 using higher order terms.
   Also generates c15....used in overflow detection.
*/

CHIP Carrybits
{
    IN hp[4], p[16], hg[4], g[16], c0;
    OUT c16, c12, c8, c4, c15;

    PARTS:
 
    And(a=hp[0], b=c0, out=c40);
    Or(a=c40, b=hg[0], out=c4);// c4 = hp[0]·c0 + hg[0]


    And4way(a=hp[0], b=hp[1], c=true, d=c0, out=c80);
    And4way(a=hp[1], b=true, c=true, d=hg[0], out=c81);
    Or4way(a=c80, b=c81, c=hg[1], d=false, out=c8); // c8 = hp[0]·hp[1]·c0 + hp[1]·hg[0] + hg[1]


    And4way(a=hp[0], b=hp[1], c=hp[2], d=c0, out=c120);
    And4way(a=hp[1], b=hp[2], c=true, d=hg[0], out=c121);
    And4way(a=hp[2], b=hg[1], c=true, d=true, out=c122);
    Or4way(a=c120, b=c121, c=hg[2], d=c122, out=c12copy);
    And(a=c12copy, b=c12copy, out=c12); // c12 = hp[0]·hp[1]·hp[2]·c0 + hp[1]·hp[2]·hg[0] + hp[2]·hg[1] + hg[2]


    And4way(a=hp[0], b=hp[1], c=hp[2], d=hp[3], out=c1600);
    And(a=c1600, b=c0, out=c160);
    And4way(a=hp[1], b=hp[2], c=hp[3], d=hg[0], out=c161);
    And4way(a=hp[2], b=hp[3], c=hg[1], d=true, out=c162);
    And4way(a=hp[3], b=true, c=true, d=hg[2], out=c163);
    Or4way(a=c160, b=c161, c=c163, d=c162, out=c164);
    Or(a=c164, b=hg[3], out=c16); // c16 = hp[0]·hp[1]·hp[2]·hp[3]·c0 + hp[1]·hp[2]·hp[3]·hg[0] + hp[3]·hp[2]·hg[1]+ hp[3]·hg[2] + hg[3]

    
    And4way(a=p[14], b=p[13], c=p[12], d=c12copy, out=c150);
    And4way(a=p[14], b=p[13], c=g[12], d=true, out=c151);
    And4way(a=p[14], b=g[13], c=true, d=true, out=c152);
    Or4way(a=c150, b=c151, c=c152, d=g[14], out=c15); // c15 = p[14]·p[13]·p[12]·c12 + p[14]·p[13]·g[12] + p[14]·g[13] + g[14]
}